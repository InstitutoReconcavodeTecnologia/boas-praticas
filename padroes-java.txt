JAVA
https://google.github.io/styleguide/javaguide.html

 - CODIFICAÇÃO E SEMÂNTICA
    - Todo código e documentação de código são escritos em inglês
    - Comentário TODO e FIXME escritos em português. Evitar outros tipos de comentários, pois o código deve ser auto-explicativo (ver regras para Métodos)
    - IMPORTAÇÃO DE PACOTES
       - Importar apenas as classes que serão usadas
       - NÃO USAR "import pacote.*"
    - CLASSES/INTERFACES
       - Começa sempre com maiúscula
       - Camel Case
       - Nomes amigáveis
          - Deve representar:
             - Situação
             - Contexto
             - Problema
             - Entidade
             - Estado
             - Objetivo
    - MÉTODOS
       - Começa sempre com minúscula
       - Camel Case
       - Nomes amigáveis
          - Sempre inicia com verbo imperativo seguido de substantivo (indica o que faz, seguir lista acima)
          - NÃO PODE TER OU/E/SE (indica que faz mais de uma coisa)
       - Máximo de uma identação
       - Máximo de 50 linhas
       - Chave abrindo na mesma linha
       - Chave fechando na linha nova 
    - PACOTES
       - Deve seguir regra de domínio inverso (br.org.reconcavo)
    - ESTRUTURAS
       - Chave abrindo na mesma linha
       - Com espaço entre parênteses e chave abrindo
       - Chave fechando na linha nova
       - Espaço entre if e parênteses
       - Sem espaços entre parênteses e condições
       - ESTRUTURAS CONDICIONAIS
          - Máximo de 3 condições
       - ESTRUTURAS DE LOOP
          - Não pode usar chamada de métodos na condição de parada
       - SWITCH-CASE
          - Instruções e breaks em linhas separadas
          - Sempre deve haver um default
       - TRY/CATCH/FINALLY
          - Com exceção de UI, não utilizar exceções-pai no catch ou especializar ao máximo as exceções disparadas
          - Evitar try/catch para tratar regras de negócio. Validar dados com objetos/métodos de validação
    - VARIÁVEIS
       - Nomes amigáveis
          - Deve mostrar o que ela representa:
             - Situação
             - Contexto
             - Entidade
             - Estado
          - Camel Case
          - Sempre inicia com minúscula
    - ATRIBUTOS DE CLASSE
       - Nomes amigáveis (segue o de VARIÁVEIS)
    - CONSTANTES
       - Tudo maiúsculo e palavras separadas por underscore
 - DOCUMENTAÇÃO DE CÓDIGO
    - Documentação de classe
       - Descrição sucinta da classe
          - O que faz
          - Quais classes do projeto a classe chama
    - Documentação de inner-classes e classes anônimas (???)
    - Documentação de métodos
       - Documentar sempre métodos publicos e protegidos
       - Descrição sucinta do método
          - O que faz
          - Descrição dos parâmetros
          - Exceções lançadas
          - O que retorna
       - Explicar o que cada trecho das expressões regulares significam
       - Caso o método seja cópia, ou baseado em algo que já existe, apontar o link
    - Documentação de atributos, constantes
       - Descrição sucinta
          - Pra que serve
    
    
    
    
    
    
    
    
    
